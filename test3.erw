type TestUnion: union[Int32, Float32, Char];
type TestStruct: struct[
	x: Int32, 
	y: Int32, 
	name: []Char
];

func test: (let t1: TestStruct, let t2: TestUnion, let t3: [2]Bool)
{
	
}

func main: () -> Int32
{
	let test1: TestUnion  = union[Float32: 3.14];
	let test2: TestStruct = struct[
		x: 32, 
		y: 100, 
		name: "Hello World"
	];

	let x: Int32 = test2.x;
	let test3: [4]Int32 = array[12, 55, 100, 5];

	test(
		struct[x: 33, y: 100, name: "Hello"], 
		union[Char: 'C'], 
		array[true, false]
	);

	let x_ref1: &Int32 = &x;
	let x_ref2: &mut Int32 = x_ref1;
	return 0;
}

